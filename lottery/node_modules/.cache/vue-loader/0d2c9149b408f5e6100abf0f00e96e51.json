{"remainingRequest":"/Users/mrc/jsProj/PivateWorks/raymanga/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mrc/jsProj/PivateWorks/raymanga/src/pages/Detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mrc/jsProj/PivateWorks/raymanga/src/pages/Detail.vue","mtime":1553517088000},{"path":"/Users/mrc/jsProj/PivateWorks/raymanga/node_modules/cache-loader/dist/cjs.js","mtime":1551613478189},{"path":"/Users/mrc/jsProj/PivateWorks/raymanga/node_modules/babel-loader/lib/index.js","mtime":1551613443346},{"path":"/Users/mrc/jsProj/PivateWorks/raymanga/node_modules/cache-loader/dist/cjs.js","mtime":1551613478189},{"path":"/Users/mrc/jsProj/PivateWorks/raymanga/node_modules/vue-loader/lib/index.js","mtime":1551613480809}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport util from '../vendors/util.js';\nimport lang from '../vendors/lang.js';\nimport ChapterStar from '../components/ChapterStar.vue';\nimport BottomPanel from '../components/BottomPanel.vue';\nimport NavBar from '../components/NavBar.vue';\n\nexport default {\n  name: 'detail',\n  data() {\n    return {\n      chapterid: parseInt(util.getQuery('chapterid')),\n      bookid: parseInt(util.getQuery('bookid')),\n      chapterNum: parseInt(util.getQuery('chapternum')) + 1,\n      pageList: [],\n      userLang: {},\n      chapterIdArr: [],\n      chapterNumArr: [],\n      isToBottom: false\n    };\n  },\n  // computed: {\n  //   currChapternum() {\n  //     return parseInt(this.chapterNum) + 1;\n  //   },\n  // },\n  created() {\n    this.getChapterList();\n    this.getBookInfo();\n    //获取用户设备语言 包含常规浏览器和ie浏览器\n    let langKey = (navigator.language || navigator.userLanguage).slice(0, 2);\n    //切换ui至相应语言\n    this.userLang = lang[langKey];\n  },\n  mounted() {\n    //动态设置fixed元素的宽度\n    let dom = document.getElementsByClassName('toggle-chapter')[0];\n    dom.style.width = document.body.clientWidth + 'px';\n    // 调用统计章节pv函数\n    this.detailPvHandle();\n\n    window.addEventListener('scroll', this.handleScroll, true);\n  },\n  methods: {\n    /**\n     * 统计阅读页pv函数,章节id可从链接获取,ChapterStar.vue有获取cookie uuid工具函数\n     */\n    detailPvHandle() {\n      console.log('detail pv');\n    },\n    /**\n     * 统计完成章节阅读用户\n     */\n    chapterDoneHandle() {\n      console.log('chapter done');\n    },\n    handleScroll() {\n      //判断页面是否拉到底部\n      let scrollDom = this.$refs.container;\n      let distance =\n        scrollDom.scrollHeight -\n        document.body.scrollTop -\n        document.body.clientHeight;\n      if (distance < 700 && !this.isToBottom) {\n        // 在距离底部400px之内,调用统计完成章节阅读用户函数\n        this.chapterDoneHandle();\n        console.log(new Date())\n        this.isToBottom = true\n      }\n    },\n    /**\n     * 获取章节详情\n     */\n    getChapterList() {\n      const getChapterDetail =\n        '//previewapi.raymangaapp.com/previewapi/v1/common/getChapterDetail';\n\n      this.$axios\n        .post(getChapterDetail, {\n          book_id: parseInt(this.bookid),\n          chapter_id: parseInt(this.chapterid),\n        })\n        .then(res => {\n          /**\n           * 状态码\n           * 1     ：成功\n           * 2000  ：常规错误\n           * 2001  ：参数错误\n           * 2002  ：数据库连接错误\n           */\n          const { code, pageList } = res.data;\n          if (code === 1) {\n            this.pageList = pageList;\n          } else if (code === 2000) {\n            this.$toast('常规错误(2000)');\n          } else if (code === 2001) {\n            this.$toast('参数错误(2001)');\n          } else if (code === 2002) {\n            this.$toast('数据库连接错误(2002)');\n          }\n        })\n        .catch(error => {\n          this.$toast('网络繁忙，请稍后再试');\n        });\n    },\n    /**\n     * 获取chapterid arr\n     */\n    getBookInfo() {\n      const getBookInfo =\n        '//previewapi.raymangaapp.com/previewapi/v1/common/getBookInfo';\n      this.$axios\n        .post(getBookInfo, {\n          book_id: this.bookid,\n        })\n        .then(res => {\n          const { code, bookInfo } = res.data;\n          if (code === 1) {\n            // 本书章节id数组\n            bookInfo.chapter_list.forEach(item => {\n              this.chapterIdArr.push(item.chapter_id);\n              this.chapterNumArr.push(item.chapter_number);\n            });\n            console.log(this.chapterNumArr);\n          }\n        })\n        .catch(error => {\n          this.$toast('网络繁忙，请稍后再试');\n        });\n    },\n    /**\n     * 切换章节\n     */\n\n    prevChapter() {\n      let currChapterIdx = this.chapterIdArr.indexOf(this.chapterid);\n      if (currChapterIdx === 0) return;\n      //按章节ID切换章节\n      this.chapterid = this.chapterIdArr[currChapterIdx - 1];\n      this.chapterNum = this.chapterNumArr[currChapterIdx - 1]+ 1;\n      this.getChapterList();\n      //切换章节时滚动视口到顶部\n      document.body.scrollTop = 0;\n    },\n    nextChapter() {\n      let currChapterIdx = this.chapterIdArr.indexOf(this.chapterid);\n      let chapterLen = this.chapterIdArr.length;\n      if (currChapterIdx >= chapterLen - 1) return;\n\n      this.chapterid = this.chapterIdArr[currChapterIdx + 1];\n      this.chapterNum = this.chapterNumArr[currChapterIdx + 1] + 1;\n      this.getChapterList();\n      document.body.scrollTop = 0;\n    },\n  },\n  components: {\n    BottomPanel,\n    ChapterStar,\n    NavBar,\n  },\n};\n",{"version":3,"sources":["Detail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"Detail.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div class=\"detail-wrapper\">\n    <NavBar :chapterNum=\"chapterNum\"></NavBar>\n    <transition name=\"fade\">\n      <div class=\"page-list\" ref=\"container\">\n        <ul class=\"list\">\n          <li v-for=\"(item,idx) in pageList\" :key=\"idx\">\n            <img :src=\"`//img1.raymangaapp.com${item.image_url}`\" v-lazy=\"`//img1.raymangaapp.com${item.image_url}`\" alt=\"\">\n          </li>\n        </ul>\n      </div>\n    </transition>\n    <ChapterStar :userLang=\"userLang\"></ChapterStar>\n    <BottomPanel class=\"download\" :userLang=\"userLang\"></BottomPanel>\n    <div class=\"toggle-chapter\">\n      <span class=\"prev\" @click=\"prevChapter\"></span>\n      <span class=\"num\">Ch.{{chapterNum}}</span>\n      <span class=\"next\" @click=\"nextChapter\"></span>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport util from '../vendors/util.js';\nimport lang from '../vendors/lang.js';\nimport ChapterStar from '../components/ChapterStar.vue';\nimport BottomPanel from '../components/BottomPanel.vue';\nimport NavBar from '../components/NavBar.vue';\n\nexport default {\n  name: 'detail',\n  data() {\n    return {\n      chapterid: parseInt(util.getQuery('chapterid')),\n      bookid: parseInt(util.getQuery('bookid')),\n      chapterNum: parseInt(util.getQuery('chapternum')) + 1,\n      pageList: [],\n      userLang: {},\n      chapterIdArr: [],\n      chapterNumArr: [],\n      isToBottom: false\n    };\n  },\n  // computed: {\n  //   currChapternum() {\n  //     return parseInt(this.chapterNum) + 1;\n  //   },\n  // },\n  created() {\n    this.getChapterList();\n    this.getBookInfo();\n    //获取用户设备语言 包含常规浏览器和ie浏览器\n    let langKey = (navigator.language || navigator.userLanguage).slice(0, 2);\n    //切换ui至相应语言\n    this.userLang = lang[langKey];\n  },\n  mounted() {\n    //动态设置fixed元素的宽度\n    let dom = document.getElementsByClassName('toggle-chapter')[0];\n    dom.style.width = document.body.clientWidth + 'px';\n    // 调用统计章节pv函数\n    this.detailPvHandle();\n\n    window.addEventListener('scroll', this.handleScroll, true);\n  },\n  methods: {\n    /**\n     * 统计阅读页pv函数,章节id可从链接获取,ChapterStar.vue有获取cookie uuid工具函数\n     */\n    detailPvHandle() {\n      console.log('detail pv');\n    },\n    /**\n     * 统计完成章节阅读用户\n     */\n    chapterDoneHandle() {\n      console.log('chapter done');\n    },\n    handleScroll() {\n      //判断页面是否拉到底部\n      let scrollDom = this.$refs.container;\n      let distance =\n        scrollDom.scrollHeight -\n        document.body.scrollTop -\n        document.body.clientHeight;\n      if (distance < 700 && !this.isToBottom) {\n        // 在距离底部400px之内,调用统计完成章节阅读用户函数\n        this.chapterDoneHandle();\n        console.log(new Date())\n        this.isToBottom = true\n      }\n    },\n    /**\n     * 获取章节详情\n     */\n    getChapterList() {\n      const getChapterDetail =\n        '//previewapi.raymangaapp.com/previewapi/v1/common/getChapterDetail';\n\n      this.$axios\n        .post(getChapterDetail, {\n          book_id: parseInt(this.bookid),\n          chapter_id: parseInt(this.chapterid),\n        })\n        .then(res => {\n          /**\n           * 状态码\n           * 1     ：成功\n           * 2000  ：常规错误\n           * 2001  ：参数错误\n           * 2002  ：数据库连接错误\n           */\n          const { code, pageList } = res.data;\n          if (code === 1) {\n            this.pageList = pageList;\n          } else if (code === 2000) {\n            this.$toast('常规错误(2000)');\n          } else if (code === 2001) {\n            this.$toast('参数错误(2001)');\n          } else if (code === 2002) {\n            this.$toast('数据库连接错误(2002)');\n          }\n        })\n        .catch(error => {\n          this.$toast('网络繁忙，请稍后再试');\n        });\n    },\n    /**\n     * 获取chapterid arr\n     */\n    getBookInfo() {\n      const getBookInfo =\n        '//previewapi.raymangaapp.com/previewapi/v1/common/getBookInfo';\n      this.$axios\n        .post(getBookInfo, {\n          book_id: this.bookid,\n        })\n        .then(res => {\n          const { code, bookInfo } = res.data;\n          if (code === 1) {\n            // 本书章节id数组\n            bookInfo.chapter_list.forEach(item => {\n              this.chapterIdArr.push(item.chapter_id);\n              this.chapterNumArr.push(item.chapter_number);\n            });\n            console.log(this.chapterNumArr);\n          }\n        })\n        .catch(error => {\n          this.$toast('网络繁忙，请稍后再试');\n        });\n    },\n    /**\n     * 切换章节\n     */\n\n    prevChapter() {\n      let currChapterIdx = this.chapterIdArr.indexOf(this.chapterid);\n      if (currChapterIdx === 0) return;\n      //按章节ID切换章节\n      this.chapterid = this.chapterIdArr[currChapterIdx - 1];\n      this.chapterNum = this.chapterNumArr[currChapterIdx - 1]+ 1;\n      this.getChapterList();\n      //切换章节时滚动视口到顶部\n      document.body.scrollTop = 0;\n    },\n    nextChapter() {\n      let currChapterIdx = this.chapterIdArr.indexOf(this.chapterid);\n      let chapterLen = this.chapterIdArr.length;\n      if (currChapterIdx >= chapterLen - 1) return;\n\n      this.chapterid = this.chapterIdArr[currChapterIdx + 1];\n      this.chapterNum = this.chapterNumArr[currChapterIdx + 1] + 1;\n      this.getChapterList();\n      document.body.scrollTop = 0;\n    },\n  },\n  components: {\n    BottomPanel,\n    ChapterStar,\n    NavBar,\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\" scoped>\n@import '../assets/scss/common.scss';\n.detail-wrapper {\n  padding: rem(170px) 0 120px;\n  width: 100%;\n}\n.page-list .list li {\n  width: 100%;\n  img {\n    width: 100%;\n    display: block;\n  }\n}\n.download {\n  bottom: rem(150px);\n}\n\n.toggle-chapter {\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  height: rem(150px);\n  background: #f4f4f4;\n  border-top: 1px solid #b2b2b2;\n  padding: 0 rem(300px);\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n\n  .prev {\n    display: inline-block;\n    width: rem(64px);\n    height: rem(64px);\n    background: url(#{$base}/ic_reader_navigation_previous.png) center center\n      no-repeat/100%;\n  }\n  .num {\n    padding: rem(20px) rem(15px);\n    box-sizing: border-box;\n    border-radius: 6px;\n    background: #e3e3e3;\n  }\n  .next {\n    display: inline-block;\n    width: rem(64px);\n    height: rem(64px);\n    background: url(#{$base}/ic_reader_navigation_next.png) center center\n      no-repeat/100%;\n  }\n}\n// .fade-enter-active,\n// .fade-leave-active {\n//   transition: opacity .5s;\n// }\n\n// .fade-enter,\n// .fade-leave-to\n// /* .scalein-leave-active below version 2.1.8 */\n\n//  {\n//   opacity: 0;\n// }\n</style>\n"]}]}
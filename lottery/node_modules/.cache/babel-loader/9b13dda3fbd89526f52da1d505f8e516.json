{"remainingRequest":"/Users/mrc/jsProj/PivateWorks/lottery/node_modules/babel-loader/lib/index.js!/Users/mrc/jsProj/PivateWorks/lottery/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/mrc/jsProj/PivateWorks/lottery/src/vendors/util.js","dependencies":[{"path":"/Users/mrc/jsProj/PivateWorks/lottery/src/vendors/util.js","mtime":1553247229357},{"path":"/Users/mrc/jsProj/PivateWorks/lottery/node_modules/cache-loader/dist/cjs.js","mtime":1551613478189},{"path":"/Users/mrc/jsProj/PivateWorks/lottery/node_modules/babel-loader/lib/index.js","mtime":1551613443346},{"path":"/Users/mrc/jsProj/PivateWorks/lottery/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1551613469831}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.constructor\";\n\n/**\n * 取url参数\n * @param {String} name url参数\n * @return {String} url值\n */\nvar getQuery = function getQuery() {\n  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var reg = new RegExp('(?:^|&)' + name + '=([^&]*)(?:&|$)', 'i');\n  /**\n   * 报销凭证回跳地址的参数需要解码后再取\n   * 但个人认为非标准方法\n   */\n\n  var ret = decodeURIComponent(location.search).substr(1).match(reg);\n  if (ret) return decodeURIComponent(ret[1]);\n  return '';\n};\n\nvar util = {\n  getQuery: getQuery\n};\nexport default util;",{"version":3,"sources":["/Users/mrc/jsProj/PivateWorks/lottery/src/vendors/util.js"],"names":["getQuery","name","reg","RegExp","ret","decodeURIComponent","location","search","substr","match","util"],"mappings":";;;;AAAA;;;;;AAKA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,GAAe;AAAA,MAAdC,IAAc,uEAAP,EAAO;AAC9B,MAAMC,GAAG,GAAG,IAAIC,MAAJ,CAAW,YAAYF,IAAZ,GAAmB,iBAA9B,EAAiD,GAAjD,CAAZ;AACA;;;;;AAIA,MAAMG,GAAG,GAAGC,kBAAkB,CAACC,QAAQ,CAACC,MAAV,CAAlB,CACTC,MADS,CACF,CADE,EAETC,KAFS,CAEHP,GAFG,CAAZ;AAGA,MAAIE,GAAJ,EAAS,OAAOC,kBAAkB,CAACD,GAAG,CAAC,CAAD,CAAJ,CAAzB;AACT,SAAO,EAAP;AACD,CAXD;;AAaA,IAAMM,IAAI,GAAG;AACTV,EAAAA,QAAQ,EAARA;AADS,CAAb;AAIA,eAAeU,IAAf","sourcesContent":["/**\n * 取url参数\n * @param {String} name url参数\n * @return {String} url值\n */\nconst getQuery = (name = '') => {\n  const reg = new RegExp('(?:^|&)' + name + '=([^&]*)(?:&|$)', 'i')\n  /**\n   * 报销凭证回跳地址的参数需要解码后再取\n   * 但个人认为非标准方法\n   */\n  const ret = decodeURIComponent(location.search)\n    .substr(1)\n    .match(reg)\n  if (ret) return decodeURIComponent(ret[1])\n  return ''\n}\n\nconst util = {\n    getQuery\n}\n\nexport default util\n"]}]}